<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="TestValidationSchema" targetNamespace="http://schemas.microsoft.com/dsltools/TestValidation" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/TestValidation" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- NamedElement -->
  <xsd:element name="namedElement" abstract="true" type="NamedElement" substitutionGroup="core:modelElement" />
  <xsd:complexType name="NamedElement" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Property: Name -->
        <xsd:attribute name="Name" type="xsd:string" use="required" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- NamedElement Moniker -->
  <xsd:element name="namedElementMoniker" abstract="true" type="NamedElementMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="NamedElementMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for NamedElement instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Name" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Family -->
  <xsd:element name="family" type="Family" substitutionGroup="namedElement" />
  <xsd:complexType name="Family">
    <xsd:complexContent>
      <xsd:extension base="NamedElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: FamilyHasPeople -->
          <xsd:element name="People" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of FamilyHasPeople</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="familyHasPeople">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from FamilyHasPeople needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="person" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Family Moniker -->
  <xsd:element name="familyMoniker" type="FamilyMoniker" substitutionGroup="namedElementMoniker" />
  <xsd:complexType name="FamilyMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Family instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NamedElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Person -->
  <xsd:element name="person" type="Person" substitutionGroup="namedElement" />
  <xsd:complexType name="Person">
    <xsd:complexContent>
      <xsd:extension base="NamedElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ParentRelation -->
          <xsd:element name="Parent" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ParentRelation</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="parentRelation" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ParentRelation needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Property: Birth -->
        <xsd:attribute name="Birth" type="xsd:integer" />
        <!-- Property: Death -->
        <xsd:attribute name="Death" type="xsd:integer" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Person Moniker -->
  <xsd:element name="personMoniker" type="PersonMoniker" substitutionGroup="namedElementMoniker" />
  <xsd:complexType name="PersonMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Person instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NamedElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- FamilyHasPeople -->
  <xsd:element name="familyHasPeople" abstract="true" type="FamilyHasPeople" substitutionGroup="core:modelElement" />
  <xsd:complexType name="FamilyHasPeople" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Person -->
          <xsd:element ref="person" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- FamilyHasPeople Moniker -->
  <xsd:element name="familyHasPeopleMoniker" abstract="true" type="FamilyHasPeopleMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="FamilyHasPeopleMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for FamilyHasPeople instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ParentRelation -->
  <xsd:element name="parentRelation" type="ParentRelation" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ParentRelation">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Person -->
          <xsd:element ref="personMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Property: ExampleProperty -->
        <xsd:attribute name="ExampleProperty" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ParentRelation Moniker -->
  <xsd:element name="parentRelationMoniker" abstract="true" type="ParentRelationMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ParentRelationMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ParentRelation instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
</xsd:schema>

