using System;
using System.Extentions.CodeDom;
using System.Extentions.CodeDom.Expressions;
using System.Extentions.CodeDom.Statements;
using System.Extentions.Templates;

namespace System.Extentions.Cons
{
	/// <summary>
	/// Summary description for SimpleDemo.
	/// </summary>
	public class SimpleDemo
	{
		public static void Output(NamespaceDeclaration ns)
		{
			// output result
			CodeGenerator gen = new CodeGenerator();
            string csfile = "csfile.cs"; 
            string vbfile = "vbfile.vb";

			// output to C#
			gen.Provider  = CodeGenerator.CsProvider;
			gen.GenerateCode("./CS",ns, csfile);

			// output to VB
			gen.Provider  = CodeGenerator.VbProvider;
			gen.GenerateCode("./VB",ns, vbfile);
		}

		public static void CreateUser()
		{
			// create namespace
			NamespaceDeclaration ns = new NamespaceDeclaration("MyFirstNamespace");

			// adding imports

			// creating User class
			ClassDeclaration user = ns.AddClass("User");
			
			// put some comments
			user.Doc.Summary.AddText("System.Extentions User class");
			user.Doc.Remarks.Add("para");
			user.Doc.Remarks.Into();
			user.Doc.Remarks.AddText("This class was generated by System.Extentions");
			user.Doc.Remarks.OutOf();

			// adding private fields
			FieldDeclaration name = user.AddField(typeof(string),"name");
			FieldDeclaration lastName = user.AddField(typeof(string),"lastName");

			// adding properties for the fields
			PropertyDeclaration pname = user.AddProperty(name,true,true,true);
			PropertyDeclaration plastName = user.AddProperty(lastName,true,true,true);

			Output(ns);
		}	

		public static void CreateStronglyTypedCollection()
		{
			NamespaceDeclaration ns = new NamespaceDeclaration("Collections");

			CollectionTemplate st = new CollectionTemplate();
			st.ElementType = typeof(string).Name;

			st.Generate(ns);

			Output(ns);
		}

		public static void CreateStronglyTypedDictionary()
		{
			NamespaceDeclaration ns = new NamespaceDeclaration("Collections");

			DictionaryTemplate st = new DictionaryTemplate();
			st.Key = typeof(string).Name;
			st.Value = typeof(int).Name;

			st.Generate(ns);

			Output(ns);
		}

		public static void CreateStronglyTypedDataReader()
		{
			NamespaceDeclaration ns = new NamespaceDeclaration("Collections");

			DataReaderTemplate st = new DataReaderTemplate();
			st.Name = "User";
			st.Data.Fields.Add("name",typeof(string).FullName);
			st.Data.Fields.Add("lastname",typeof(string).FullName);
			st.Generate(ns);

			Output(ns);
		}
	}
}
